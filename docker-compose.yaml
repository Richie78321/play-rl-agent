version: '3'

services:
  zookeeper:
    image: bitnami/zookeeper:latest
    restart: always
    volumes:
      - zookeeper_data:/bitnami/zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka1:
    image: bitnami/kafka:latest
    restart: always
    ports:
      - "29092:29092"
    environment:
      - KAFKA_CFG_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka1:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - "kafka1_data:/bitnami/kafka"
    # This ensures that Kafka can properly unregister itself from ZooKeeper before ZooKeeper stops.
    depends_on:
      - zookeeper
  kafka2:
    image: bitnami/kafka:latest
    restart: always
    ports:
      - "39092:39092"
    environment:
      - KAFKA_CFG_BROKER_ID=2
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:39092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka2:9092,PLAINTEXT_HOST://localhost:39092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - "kafka2_data:/bitnami/kafka"
    # This ensures that Kafka can properly unregister itself from ZooKeeper before ZooKeeper stops.
    depends_on:
      - zookeeper
  postgres:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=playdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres.sql:/docker-entrypoint-initdb.d/postgres.sql:ro
  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    ports:
      - "8081:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@pgadmin.com
      - PGADMIN_DEFAULT_PASSWORD=password
    volumes:
      - pgadmin_data:/var/lib/pgadmin
  logstash:
    build:
      dockerfile: ./Logstash.Dockerfile
    restart: always
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    environment:
      - XPACK_MONITORING_ENABLED=false
    depends_on:
      - kafka1
      - kafka2
  agent-api:
    build:
      context: ./api
      dockerfile: ./agent-api.Dockerfile
    restart: always
  playdata-api:
    build:
      context: ./api
      dockerfile: ./playdata-api.Dockerfile
    restart: always
    environment:
      - KAFKA_BOOTSTRAP_SERVER=kafka1:9092
    depends_on:
      - kafka1
      - kafka2
  frontend:
    build:
      context: ./frontend
    restart: always
  proxy:
    image: nginx:latest
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
volumes:
  kafka1_data:
  kafka2_data:
  zookeeper_data:
  postgres_data:
  pgadmin_data: